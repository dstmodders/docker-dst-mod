name: Build

on:
  push:
    branches:
      - develop
      - main
    paths:
      - 'alpine/**'
      - 'debian/**'
      - .github/workflows/build.yml
      - versions.json
  workflow_dispatch:

env:
  DOCKERHUB_REPOSITORY: ${{ github.repository_owner }}/dst-mod
  SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
  SLACK_SIGNING_SECRET: ${{ secrets.SLACK_SIGNING_SECRET }}
  SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Check out
        uses: actions/checkout@v4
      - name: Set matrix
        id: set-matrix
        run: |
          json="$(cat ./versions.json)"
          echo "matrix=$(jq -cM . <<< "$json")" >> "$GITHUB_OUTPUT"

  image:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        image: ${{ fromJSON(needs.prepare.outputs.matrix) }}
    steps:
      - name: Check out
        uses: actions/checkout@v4
      - name: Set general outputs
        id: general
        run: |
          dockerfiles_version='${{ hashFiles('**/Dockerfile') }}'
          dockerfiles_version_short="$(echo "$dockerfiles_version" | cut -c 1-7)"

          echo "Dockerfiles version: $dockerfiles_version"
          echo "Dockerfiles version (short): $dockerfiles_version_short"

          {
            echo "dockerfiles-version=$dockerfiles_version"
            echo "dockerfiles-version-short=$dockerfiles_version_short"
          } >> "$GITHUB_OUTPUT"
      - name: Send Slack notification
        uses: codedsolar/slack-action@v1
        if: ${{ github.event_name != 'pull_request' }}
        id: slack
        with:
          fields: |
            {STATUS}
            {REF}
            ImageMagick version: ${{ matrix.image.imagemagick_version }}
            klei-tools version: ${{ matrix.image.klei_tools_version }}
            ktools version: ${{ matrix.image.ktools_version }}
          status: in-progress
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        if: ${{ github.event_name != 'pull_request' }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GHCR
        uses: docker/login-action@v3
        if: ${{ github.event_name != 'pull_request' }}
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Prepare Docker meta for an Alpine image
        uses: docker/metadata-action@v5
        id: alpine-meta
        with:
          images: |
            ${{ env.DOCKERHUB_REPOSITORY }}
            ghcr.io/${{ env.DOCKERHUB_REPOSITORY }}
          labels: maintainer=victor@popkov.me
          tags: type=raw,value=alpine
      - name: Cache Docker layers (Alpine)
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-alpine-cache
          key: ${{ format('alpine-{0}', steps.general.outputs.dockerfiles-version-short) }}
          restore-keys: |
            alpine-${{ steps.general.outputs.dockerfiles-version-short }}
            alpine-
      - name: Build an Alpine image
        uses: docker/build-push-action@v5
        with:
          build-args: |
            IMAGEMAGICK_VERSION=${{ matrix.image.imagemagick_version }}
            KTOOLS_VERSION=${{ matrix.image.ktools_version }}
          cache-from: type=local,src=/tmp/.buildx-alpine-cache
          cache-to: type=local,dest=/tmp/.buildx-alpine-cache-new,mode=max
          context: .
          file: ./alpine/Dockerfile
          labels: ${{ steps.alpine-meta.outputs.labels }}
          platforms: linux/amd64
          pull: true
          push: ${{ !env.ACT && github.ref == 'refs/heads/main' }}
          tags: ${{ steps.alpine-meta.outputs.tags }}
      - name: Prepare Docker meta for a Debian image
        uses: docker/metadata-action@v5
        id: debian-meta
        with:
          flavor: latest=${{ matrix.image.latest }}
          images: |
            ${{ env.DOCKERHUB_REPOSITORY }}
            ghcr.io/${{ env.DOCKERHUB_REPOSITORY }}
          labels: maintainer=victor@popkov.me
          tags: type=raw,value=debian
      - name: Cache Docker layers (Debian)
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-debian-cache
          key: ${{ format('debian-{0}', steps.general.outputs.dockerfiles-version-short) }}
          restore-keys: |
            debian-${{ steps.general.outputs.dockerfiles-version-short }}
            debian-
      - name: Build a Debian image
        uses: docker/build-push-action@v5
        with:
          build-args: |
            KLEI_TOOLS_VERSION=${{ matrix.image.klei_tools_version }}
            KTOOLS_VERSION=${{ matrix.image.ktools_version }}
          cache-from: type=local,src=/tmp/.buildx-debian-cache
          cache-to: type=local,dest=/tmp/.buildx-debian-cache-new,mode=max
          context: .
          file: ./debian/Dockerfile
          labels: ${{ steps.debian-meta.outputs.labels }}
          platforms: linux/amd64
          pull: true
          push: ${{ !env.ACT && github.ref == 'refs/heads/main' }}
          tags: ${{ steps.debian-meta.outputs.tags }}
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-alpine-cache /tmp/.buildx-debian-cache
          mv /tmp/.buildx-alpine-cache-new /tmp/.buildx-alpine-cache
          mv /tmp/.buildx-debian-cache-new /tmp/.buildx-debian-cache
      - name: Update Slack notification
        uses: codedsolar/slack-action@v1
        if: ${{ github.event_name != 'pull_request' && always() }}
        with:
          fields: |
            {STATUS}
            {REF}
            ImageMagick version: ${{ matrix.image.imagemagick_version }}
            klei-tools version: ${{ matrix.image.klei_tools_version }}
            ktools version: ${{ matrix.image.ktools_version }}
          status: ${{ job.status }}
          timestamp: ${{ steps.slack.outputs.slack-timestamp }}
